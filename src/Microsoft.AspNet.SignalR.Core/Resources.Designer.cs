//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.AspNet.SignalR {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.AspNet.SignalR.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to             /// &lt;summary&gt;Calls the {0} method on the server-side {1} hub.&amp;#10;Returns a jQuery.Deferred() promise.&lt;/summary&gt;.
        /// </summary>
        internal static string DynamicComment_CallsMethodOnServerSideDeferredPromise {
            get {
                return ResourceManager.GetString("DynamicComment_CallsMethodOnServerSideDeferredPromise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to             /// &lt;param name=\&quot;{0}\&quot; type=\&quot;{1}\&quot;&gt;Server side type is {2}&lt;/param&gt;.
        /// </summary>
        internal static string DynamicComment_ServerSideTypeIs {
            get {
                return ResourceManager.GetString("DynamicComment_ServerSideTypeIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Caller is not authorized to invoke the {0} method on {1}..
        /// </summary>
        internal static string Error_CallerNotAuthorizedToInvokeMethodOn {
            get {
                return ResourceManager.GetString("Error_CallerNotAuthorizedToInvokeMethodOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection.
        /// </summary>
        internal static string Error_Connection {
            get {
                return ResourceManager.GetString("Error_Connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connectionId.
        /// </summary>
        internal static string Error_ConnectionId {
            get {
                return ResourceManager.GetString("Error_ConnectionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection not initialized..
        /// </summary>
        internal static string Error_ConnectionNotInitialized {
            get {
                return ResourceManager.GetString("Error_ConnectionNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connectionType.
        /// </summary>
        internal static string Error_ConnectionType {
            get {
                return ResourceManager.GetString("Error_ConnectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating hub {0}. .
        /// </summary>
        internal static string Error_ErrorCreatingHub {
            get {
                return ResourceManager.GetString("Error_ErrorCreatingHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to groupName.
        /// </summary>
        internal static string Error_GroupName {
            get {
                return ResourceManager.GetString("Error_GroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hubName.
        /// </summary>
        internal static string Error_HubName {
            get {
                return ResourceManager.GetString("Error_HubName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a {1}..
        /// </summary>
        internal static string Error_IsNotA {
            get {
                return ResourceManager.GetString("Error_IsNotA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; method could not be resolved..
        /// </summary>
        internal static string Error_MethodCouldNotBeResolved {
            get {
                return ResourceManager.GetString("Error_MethodCouldNotBeResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to methodName.
        /// </summary>
        internal static string Error_MethodName {
            get {
                return ResourceManager.GetString("Error_MethodName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple activators for type {0} are registered. Please call GetServices instead..
        /// </summary>
        internal static string Error_MultipleActivatorsAreaRegisteredCallGetServices {
            get {
                return ResourceManager.GetString("Error_MultipleActivatorsAreaRegisteredCallGetServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol error: Missing connection id..
        /// </summary>
        internal static string Error_ProtocolErrorMissingConnectionId {
            get {
                return ResourceManager.GetString("Error_ProtocolErrorMissingConnectionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol error: Unknown transport..
        /// </summary>
        internal static string Error_ProtocolErrorUnknownTransport {
            get {
                return ResourceManager.GetString("Error_ProtocolErrorUnknownTransport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to resolver.
        /// </summary>
        internal static string Error_Resolver {
            get {
                return ResourceManager.GetString("Error_Resolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add module. The HubPipeline has already been invoked..
        /// </summary>
        internal static string Error_UnableToAddModulePiplineAlreadyInvoked {
            get {
                return ResourceManager.GetString("Error_UnableToAddModulePiplineAlreadyInvoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using a hub instance not created by the hub pipeline is unsupported..
        /// </summary>
        internal static string Error_UsingHubInstanceNotCreatedUnsupported {
            get {
                return ResourceManager.GetString("Error_UsingHubInstanceNotCreatedUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; hub could not be resolved..
        /// </summary>
        internal static string Errror_HubCouldNotBeResolved {
            get {
                return ResourceManager.GetString("Errror_HubCouldNotBeResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection exists. Closing previous connection. Old=({0}, {1}) New=({2}).
        /// </summary>
        internal static string Trace_ConnectionExistsClosingPreviousConnection {
            get {
                return ResourceManager.GetString("Trace_ConnectionExistsClosingPreviousConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection is New=({0})..
        /// </summary>
        internal static string Trace_ConnectionIsNew {
            get {
                return ResourceManager.GetString("Trace_ConnectionIsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a worker, allocated={0}, busy={1}.
        /// </summary>
        internal static string Trace_CreatingWorkerAllocatedBusy {
            get {
                return ResourceManager.GetString("Trace_CreatingWorkerAllocatedBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to process work -.
        /// </summary>
        internal static string Trace_FailedProcessWork {
            get {
                return ResourceManager.GetString("Trace_FailedProcessWork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raising Disconnect failed: {0}.
        /// </summary>
        internal static string Trace_RaisingDisconnectFailed {
            get {
                return ResourceManager.GetString("Trace_RaisingDisconnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing connection {0}.
        /// </summary>
        internal static string Trace_RemovingConnection {
            get {
                return ResourceManager.GetString("Trace_RemovingConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SignalR error during transport heart beat on background thread: {0}.
        /// </summary>
        internal static string Trace_SignalRErrorDuringHeartBeatOnBGThread {
            get {
                return ResourceManager.GetString("Trace_SignalRErrorDuringHeartBeatOnBGThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to timer handler took longer than current interval.
        /// </summary>
        internal static string Trace_TimerHandlerLongerCurrentInterval {
            get {
                return ResourceManager.GetString("Trace_TimerHandlerLongerCurrentInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SignalR exception thrown by Task: {0}.
        /// </summary>
        internal static string TraceError_SignalRExceptionThrownByTask {
            get {
                return ResourceManager.GetString("TraceError_SignalRExceptionThrownByTask", resourceCulture);
            }
        }
    }
}
