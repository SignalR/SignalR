<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DynamicComment_CallsMethodOnServerSideDeferredPromise" xml:space="preserve">
    <value>            /// &lt;summary&gt;Calls the {0} method on the server-side {1} hub.&amp;#10;Returns a jQuery.Deferred() promise.&lt;/summary&gt;</value>
  </data>
  <data name="DynamicComment_ServerSideTypeIs" xml:space="preserve">
    <value>            /// &lt;param name=\"{0}\" type=\"{1}\"&gt;Server side type is {2}&lt;/param&gt;</value>
  </data>
  <data name="Error_BufferSizeOutOfRange" xml:space="preserve">
    <value>The buffer size '{0}' is out of range.</value>
  </data>
  <data name="Error_CallerNotAuthorizedToInvokeMethodOn" xml:space="preserve">
    <value>Caller is not authorized to invoke the {0} method on {1}.</value>
  </data>
  <data name="Error_ConnectionIdIncorrectFormat" xml:space="preserve">
    <value>The connection id is in the incorrect format.</value>
  </data>
  <data name="Error_ConnectionNotInitialized" xml:space="preserve">
    <value>The PersistentConnection is not initialized.</value>
  </data>
  <data name="Error_DisconnectTimeoutCannotBeConfiguredAfterKeepAlive" xml:space="preserve">
    <value>DisconnectTimeout cannot be configured after the KeepAlive.</value>
  </data>
  <data name="Error_DisconnectTimeoutMustBeAtLeastSixSeconds" xml:space="preserve">
    <value>DisconnectTimeout must be at least six seconds.</value>
  </data>
  <data name="Error_DoNotReadRequireOutgoing" xml:space="preserve">
    <value>Do not read RequireOutgoing. Use protected _requireOutgoing instead.</value>
  </data>
  <data name="Error_DuplicateHubs" xml:space="preserve">
    <value>Duplicate hub names found.</value>
  </data>
  <data name="Error_DuplicatePayloadsForStream" xml:space="preserve">
    <value>Duplicate payload id detected for stream '{0}'.</value>
  </data>
  <data name="Error_ErrorCreatingHub" xml:space="preserve">
    <value>Error creating Hub {0}. </value>
  </data>
  <data name="Error_HubCouldNotBeResolved" xml:space="preserve">
    <value>'{0}' Hub could not be resolved.</value>
  </data>
  <data name="Error_HubInvocationFailed" xml:space="preserve">
    <value>There was an error invoking Hub method '{0}.{1}'.</value>
  </data>
  <data name="Error_InvalidCursorFormat" xml:space="preserve">
    <value>Invalid cursor.</value>
  </data>
  <data name="Error_InvalidForeverFrameId" xml:space="preserve">
    <value>The supplied frameId is in the incorrect format.</value>
  </data>
  <data name="Error_IsNotA" xml:space="preserve">
    <value>'{0}' is not a {1}.</value>
  </data>
  <data name="Error_JavaScriptProxyDisabled" xml:space="preserve">
    <value>SignalR: JavaScript Hub proxy generation has been disabled.</value>
  </data>
  <data name="Error_KeepAliveMustBeGreaterThanTwoSeconds" xml:space="preserve">
    <value>Keep Alive value must be greater than two seconds.</value>
  </data>
  <data name="Error_KeepAliveMustBeNoMoreThanAThirdOfTheDisconnectTimeout" xml:space="preserve">
    <value>Keep Alive value must be no more than a third of the DisconnectTimeout.</value>
  </data>
  <data name="Error_MethodCouldNotBeResolved" xml:space="preserve">
    <value>'{0}' method could not be resolved.</value>
  </data>
  <data name="Error_MethodLevelOutgoingAuthorization" xml:space="preserve">
    <value>Outgoing authorization can only be required for an entire Hub, not a specific method.</value>
  </data>
  <data name="Error_MultipleActivatorsAreaRegisteredCallGetServices" xml:space="preserve">
    <value>Multiple activators for type {0} are registered. Please call GetServices instead.</value>
  </data>
  <data name="Error_ParseObjectFailed" xml:space="preserve">
    <value>Unexpected end when reading object.</value>
  </data>
  <data name="Error_ProtocolErrorMissingConnectionToken" xml:space="preserve">
    <value>Protocol error: Missing connection token.</value>
  </data>
  <data name="Error_ProtocolErrorUnknownTransport" xml:space="preserve">
    <value>Protocol error: Unknown transport.</value>
  </data>
  <data name="Error_StateExceededMaximumLength" xml:space="preserve">
    <value>State has exceeded the maximum length of 4096 bytes.</value>
  </data>
  <data name="Error_UnableToAddModulePiplineAlreadyInvoked" xml:space="preserve">
    <value>Unable to add module. The HubPipeline has already been invoked.</value>
  </data>
  <data name="Error_UsingHubInstanceNotCreatedUnsupported" xml:space="preserve">
    <value>Using a Hub instance not created by the HubPipeline is unsupported.</value>
  </data>
  <data name="Error_WebSocketsNotSupported" xml:space="preserve">
    <value>WebSockets is not supported.</value>
  </data>
</root>