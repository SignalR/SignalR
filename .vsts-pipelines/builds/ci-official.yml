# This sets the build number
name: $(Date:yyyyMMdd)$(Rev:-rr)

trigger:
- master
- release/*
- vsts/*

phases:
- template: ../templates/signalr-build.yml
  parameters:
    queueName: DotNetCore-Windows
    variables:
      SignType: real
      Localize: true
      TeamName: AspNetCore
      OfficialBuild: true
    beforeBuild:
    # Detect OSS Components in use in the product. Only needs to run on one OS in the matrix.
    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'
      inputs:
        # This funky GUID represents the product "ASP.NET and EF Core"
        governanceProduct: 'c641993b-8380-e811-80c3-0004ffb4789e'
        snapshotForceEnabled: true

    - task: ms-vseng.MicroBuildTasks.a0262b21-fb8f-46f8-bb9a-60ed560d4a87.MicroBuildLocalizationPlugin@1
      displayName: 'Install Localization Plugin'

    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
      displayName: Install CodeSigning plugin
      inputs:
        signType: $(SignType)
      condition: and(succeeded(), in(variables['SignType'], 'test', 'real'))

    afterBuild:
    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
      displayName: Perform Cleanup Tasks
      condition: succeededOrFailed()

    - task: PublishSymbols@2
      displayName: 'Publish symbols path'
      condition: succeeded()
      inputs:
        SearchPattern: 'artifacts\$(BuildConfiguration)\symbols\windows\**\*.pdb'
        SymbolServerType: FileShare
        SymbolsProduct: AspNetSignalR
        SymbolsPath: '$(DropShareRoot)\$(Build.BuildNumber)'
        SymbolsArtifactName: 'symbols-$(BuildConfiguration)'

        # We use SourceLink at build time, and Pdb2Pdb translates that to srcsrv at conversion time
        IndexSources: false
