<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Go" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildProjectDirectory)\Build.tasks" />
  <Import Project="$(MSBuildProjectDirectory)\Microsoft.AspNet.SignalR.versions.targets" />

  <PropertyGroup>
    <Configuration Condition="$(Configuration) == ''">Debug</Configuration>
    <ProjectRoot>$(MSBuildProjectDirectory)\..</ProjectRoot>
    <ArtifactsDir>$(ProjectRoot)\artifacts\$(Configuration)</ArtifactsDir>
    <TestResultsPath>$(ArtifactsDir)\TestResults</TestResultsPath>
    <DocsPath>$(ArtifactsDir)\docs</DocsPath>
    <NuGetToolsPath>$(ProjectRoot)\.nuget</NuGetToolsPath>
    <NuGetExePath>$(NuGetToolsPath)\nuget.exe</NuGetExePath>
    <ToolsPath>$(ProjectRoot)\tools\</ToolsPath>
    <XunitPath>$(ToolsPath)xunit\</XunitPath>
    <ChutzpahExePath>$(ProjectRoot)\tools\chutzpah\chutzpah.console.exe</ChutzpahExePath>
    <JSTestsBridgeFile>$(ProjectRoot)\tests\Microsoft.AspNet.SignalR.Client.JS.Tests\CommandLineBridge.js</JSTestsBridgeFile>
    <DocuExePath>$(ToolsPath)docu\docu.exe</DocuExePath>
    <ZipExe>$(ToolsPath)7za920\7za.exe</ZipExe>
    <ScriptTempPath>$(ArtifactsDir)\Microsoft.AspNet.SignalR.Client.JS\Scripts</ScriptTempPath>
    <LocalToolsPath></LocalToolsPath>
    <KeyFile Condition="'$(KeyFile)' == ''">$(ProjectRoot)\35MSSharedLib1024.snk</KeyFile>
  </PropertyGroup>

  <!-- Add extra properties to the build for signing -->
  <PropertyGroup Condition="Exists('$(KeyFile)')">
    <ExtraProperties>KeyFile=$(KeyFile)</ExtraProperties>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Build number is of the format (CurrentYear - VersionStartYear + 1)(2 digit month)(2 digit day) -->
    <BuildDate>$([MSBuild]::Add(1, $([MSBuild]::Subtract($([System.DateTime]::Now.Year), $(VersionStartYear)))))$([System.DateTime]::Now.ToString("MMdd"))</BuildDate>
    <Revision Condition="$(BUILD_NUMBER) != ''">$(BUILD_NUMBER)</Revision>
    <Revision Condition="$(BUILD_NUMBER) == ''">0</Revision>
    <PrereleaseTagWithSeparator Condition="$(PRERELEASE) != '' And $(BuildQuality) != ''">-$(BuildQuality)-$([System.DateTime]::Now.ToString("yyMMdd"))</PrereleaseTagWithSeparator>
    <Version>$(MajorVersion).$(MinorVersion).$(PatchVersion)</Version>
    <FileVersion>$(MajorVersion).$(MinorVersion).$(BuildDate).$(Revision)</FileVersion>
    <PackageVersion>$(MajorVersion).$(MinorVersion).$(PatchVersion)$(PrereleaseTagWithSeparator)</PackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <RegexTransform Include="$(ProjectRoot)\src\Common\CommonVersionInfo.cs">
      <Find>AssemblyVersion\("\d+\.\d+\.\d+"\)</Find>
      <ReplaceWith>AssemblyVersion("$(Version)")</ReplaceWith>
    </RegexTransform>
    <RegexTransform Include="$(ProjectRoot)\src\Common\CommonVersionInfo.cs">
      <Find>AssemblyFileVersion\("\d+\.\d+\.\d+\.\d+"\)</Find>
      <ReplaceWith>AssemblyFileVersion("$(FileVersion)")</ReplaceWith>
    </RegexTransform>
    <RegexTransform Include="$(ProjectRoot)\src\Common\CommonVersionInfo.cs">
      <Find>AssemblyInformationalVersion\("\d+\.\d+\.\d+(-\w+\d*(-\d+)?)?"\)</Find>
      <ReplaceWith>AssemblyInformationalVersion("$(PackageVersion)")</ReplaceWith>
    </RegexTransform>
    <RegexTransform Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Client\Connection.cs">
      <Find>_assemblyVersion = new Version\("\d+\.\d+\.\d+"\)</Find>
      <ReplaceWith>_assemblyVersion = new Version("$(Version)")</ReplaceWith>
    </RegexTransform>
    <RegexTransform Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Client.JS\jquery.signalR.core.js">
      <Find>SignalR JavaScript Library v\d+\.\d+\.\d+(-\w+\d*(-\d+)?)?</Find>
      <ReplaceWith>SignalR JavaScript Library v$(PackageVersion)</ReplaceWith>
    </RegexTransform>
    <RegexTransform Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Core\Scripts\hubs.js">
      <Find>SignalR JavaScript Library v\d+\.\d+\.\d+(-\w+\d*(-\d+)?)?</Find>
      <ReplaceWith>SignalR JavaScript Library v$(PackageVersion)</ReplaceWith>
    </RegexTransform>
  </ItemGroup>

  <Target Name="UpdateVersion">
    <RegexTransform Items="@(RegexTransform)" />
  </Target>

  <UsingTask AssemblyFile="$(XunitPath)xunit.runner.msbuild.dll"
             TaskName="Xunit.Runner.MSBuild.xunit" />

  <Target Name="CI" DependsOnTargets="RunCodeAnalysis; Build; RunUnitTests;">
  </Target>

  <Target Name="FunctionalCI" DependsOnTargets="RunCodeAnalysis; Build; RunTests;">
  </Target>

  <Target Name="Go" DependsOnTargets="RunCodeAnalysis; Build; RunTests;">
  </Target>

  <Target Name="BuildCmd" DependsOnTargets="RunCodeAnalysis; Build; RunUnitTests;">
  </Target>

  <Target Name="RunUnitTests">
    <Exec Command="$(ChutzpahExePath) $(JSTestsBridgeFile) /silent" />
    <RemoveDir Directories="$(ProjectRoot)\tests\Microsoft.AspNet.SignalR.Client.JS.Tests\temp" ContinueOnError="true"></RemoveDir>
    <Delete Files="$(ProjectRoot)\tests\Microsoft.AspNet.SignalR.Client.JS.Tests\CommandLineBridge.js" ContinueOnError="true"></Delete>

    <xunit Assembly="$(ArtifactsDir)\Microsoft.AspNet.SignalR.Tests\Microsoft.AspNet.SignalR.Tests.dll" 
           Xml="$(TestResultsPath)\Microsoft.AspNet.SignalR.Tests.XunitResults.xml" 
           Verbose="true" />     
  </Target>

  <Target Name="RunFunctionalTests">
    <xunit Assembly="$(ArtifactsDir)\Microsoft.AspNet.SignalR.FunctionalTests\bin\Microsoft.AspNet.SignalR.FunctionalTests.dll" 
           Xml="$(TestResultsPath)\Microsoft.AspNet.SignalR.FunctionalTests.XunitResults.xml" 
           Verbose="true" />
    <CallTarget Targets="KillIISExpress" />
    <OnError ExecuteTargets="KillIISExpress" />
  </Target>
    
  <Target Name="KillIISExpress">
    <Exec Command="taskkill /IM iisexpress.exe /F" ContinueOnError="true" />
  </Target>

    <Target Name="RunTests" DependsOnTargets="RunUnitTests; RunFunctionalTests;">
  </Target>

  <Target Name="CreateOutputDir">
    <RemoveDir Directories="$(ArtifactsDir)" />
    <MakeDir Directories="$(ArtifactsDir)" Condition="!Exists('$(ArtifactsDir)')" />
    <MakeDir Directories="$(TestResultsPath)" Condition="!Exists('$(TestResultsPath)')" />
    <MakeDir Directories="$(DocsPath)" Condition="!Exists('$(DocsPath)')" />
  </Target>

  <Target Name="Build" DependsOnTargets="CreateOutputDir">
    <MSBuild Projects="$(ProjectRoot)\Microsoft.AspNet.SignalR.sln"
             Targets="Build"
             Properties="Configuration=$(Configuration);ArtifactsDir=$(ArtifactsDir);$(ExtraProperties)" />

    <MSBuild Projects="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Client.WP71\Microsoft.AspNet.SignalR.Client.WP71.csproj"
             Targets="Build"
             Condition="(Exists('$(MSBuildExtensionsPath)\Microsoft\Silverlight for Phone\') And Exists('$(MSBuildExtensionsPath)\Silverlight for Phone\v4.0\Microsoft.Silverlight.WindowsPhone71.Overrides.targets')) Or (Exists('$(LocalToolsPath)\WP7'))"
             Properties="Configuration=$(Configuration);ArtifactsDir=$(ArtifactsDir);$(ExtraProperties);SolutionDir=$(ProjectRoot);" />

    <MSBuild Projects="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Client.WP8\Microsoft.AspNet.SignalR.Client.WP8.csproj"
             Targets="Build"
             Condition="(Exists('$(MSBuildExtensionsPath)\Microsoft\WindowsPhone\v8.0\Microsoft.WindowsPhone.v8.0.Overrides.targets')) Or (Exists('$(LocalToolsPath)\WP8'))"
             Properties="Configuration=$(Configuration);ArtifactsDir=$(ArtifactsDir);$(ExtraProperties);SolutionDir=$(ProjectRoot);" />

    <MSBuild Projects="$(ProjectRoot)\Microsoft.AspNet.SignalR.Silverlight.sln"
             Targets="Build"
             Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\Silverlight\v5.0\Microsoft.Silverlight.CSharp.targets') Or Exists('$(LocalToolsPath)\Silverlight')"
             Properties="Configuration=$(Configuration);ArtifactsDir=$(ArtifactsDir);$(ExtraProperties)" />

    <MSBuild Projects="$(ProjectRoot)\Microsoft.AspNet.SignalR.WinRT.sln"
             Targets="Build"
             Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\WindowsXaml')"
             Properties="Configuration=$(Configuration);ArtifactsDir=$(ArtifactsDir);$(ExtraProperties)" />
  </Target>

  <Target Name="RunCodeAnalysis" Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v11.0\CodeAnalysis\fxcoptask.dll')">
    <ItemGroup>
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Core\Microsoft.AspNet.SignalR.Core.csproj"></AnalysisProjects>
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Client\Microsoft.AspNet.SignalR.Client.csproj"></AnalysisProjects>
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Hosting.Memory\Microsoft.AspNet.SignalR.Hosting.Memory.csproj"></AnalysisProjects>        
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Owin\Microsoft.AspNet.SignalR.Owin.csproj"></AnalysisProjects>
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Owin45\Microsoft.AspNet.SignalR.Owin45.csproj"></AnalysisProjects>        
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.SystemWeb\Microsoft.AspNet.SignalR.SystemWeb.csproj"></AnalysisProjects>
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.SystemWeb45\Microsoft.AspNet.SignalR.SystemWeb45.csproj"></AnalysisProjects>        
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.Redis\Microsoft.AspNet.SignalR.Redis.csproj"></AnalysisProjects>
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.SqlServer\Microsoft.AspNet.SignalR.SqlServer.csproj"></AnalysisProjects>
      <AnalysisProjects Include="$(ProjectRoot)\src\Microsoft.AspNet.SignalR.ServiceBus\Microsoft.AspNet.SignalR.ServiceBus.csproj"></AnalysisProjects>
    </ItemGroup>

    <MSBuild Projects="%(AnalysisProjects.Identity)"
             Targets="ReBuild"
             Properties="RunCodeAnalysis=true;Configuration=$(Configuration);" />

    <!-- These projects are built separately because they have conditional build commands -->
    <MSBuild Projects="$(ProjectRoot)\Microsoft.AspNet.SignalR.Silverlight.sln"
             Targets="ReBuild"
             Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\Silverlight\v5.0\Microsoft.Silverlight.CSharp.targets') Or Exists('$(LocalToolsPath)\Silverlight')"
             Properties="RunCodeAnalysis=true;Configuration=$(Configuration);" />

    <MSBuild Projects="$(ProjectRoot)\Microsoft.AspNet.SignalR.WinRT.sln"
             Targets="ReBuild"
             Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\WindowsXaml')"
             Properties="RunCodeAnalysis=true;Configuration=$(Configuration);" />

  </Target>
</Project>